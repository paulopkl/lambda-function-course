{
  "C:\\Users\\paulo\\Documents\\Projetos\\Lambda\\nodejs10.x": {
    "versionSfCore": null,
    "versionFramework": "4.1.12",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {},
    "composeServiceName": null,
    "servicePath": "C:\\Users\\paulo\\Documents\\Projetos\\Lambda\\nodejs10.x",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "yumda2-example",
      "provider": {
        "name": "aws",
        "runtime": "nodejs10.x",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "environment": {
          "IS_LOCAL": "true"
        },
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HelloDashworldLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/yumda2-example-dev-hello-world"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "yumda2-example",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/yumda2-example-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/yumda2-example-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "yumda2-example",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        }
      },
      "package": {
        "individually": true,
        "exclude": [
          "./**"
        ],
        "artifactsS3KeyDirname": "serverless/yumda2-example/dev/code-artifacts",
        "artifactDirectoryName": "serverless/yumda2-example/dev/1720904494626-2024-07-13T21:01:34.626Z"
      },
      "functions": {
        "hello-world": {
          "handler": "hello-world/app.lambdaHandler",
          "package": {
            "include": [
              "hello-world/**"
            ],
            "artifact": "C:\\Users\\paulo\\Documents\\Projetos\\Lambda\\nodejs10.x\\.serverless\\hello-world.zip"
          },
          "layers": [
            {
              "Ref": "DependenciesLambdaLayer"
            }
          ],
          "events": [],
          "name": "yumda2-example-dev-hello-world"
        }
      },
      "layers": {
        "dependencies": {
          "path": "dependencies",
          "package": {
            "artifact": "dependencies.zip"
          }
        }
      }
    },
    "serviceRawFile": "service: yumda2-example\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs10.x\r\n\r\npackage:\r\n  individually: true\r\n  exclude:\r\n    - ./**\r\n\r\nfunctions:\r\n  hello-world:\r\n    handler: hello-world/app.lambdaHandler\r\n    package:\r\n      include:\r\n        - hello-world/**\r\n    layers:\r\n      - {Ref: DependenciesLambdaLayer}\r\n\r\nlayers:\r\n  dependencies:\r\n    path: dependencies\r\n    package:\r\n      artifact: dependencies.zip\r\n",
    "command": [
      "invoke",
      "local"
    ],
    "options": {
      "docker": true,
      "function": "hello-world"
    },
    "error": {
      "message": "ENOENT: no such file or directory, open 'C:\\Users\\paulo\\Documents\\Projetos\\Lambda\\nodejs10.x\\dependencies.zip'",
      "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\paulo\\Documents\\Projetos\\Lambda\\nodejs10.x\\dependencies.zip'",
      "code": "ENOENT"
    },
    "params": {},
    "machineId": "5a16c97b67df8b68fd42aa4ba5c486cb",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "1875faa3-d021-4179-a828-51d52779df6f",
    "orgName": "paulopkl",
    "userId": "Xz4BP9fyfGhGT0MDZt",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "paulopkl",
    "subscription": null,
    "userEmail": "palmeida.ipms@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "344743739159",
    "versionSf": "4.1.12",
    "serviceProviderAwsCfStackName": "yumda2-example-dev",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}